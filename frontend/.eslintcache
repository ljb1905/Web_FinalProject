[{"F:\\2020 아주대\\3-2\\웹시설\\프로젝트\\Project_201620897\\frontend\\src\\index.js":"1","F:\\2020 아주대\\3-2\\웹시설\\프로젝트\\Project_201620897\\frontend\\src\\Body.js":"2","F:\\2020 아주대\\3-2\\웹시설\\프로젝트\\Project_201620897\\frontend\\src\\Header.js":"3","F:\\2020 아주대\\3-2\\웹시설\\프로젝트\\Project_201620897\\frontend\\src\\BoardForm.js":"4","F:\\2020 아주대\\3-2\\웹시설\\프로젝트\\Project_201620897\\frontend\\src\\Write.js":"5","F:\\2020 아주대\\3-2\\웹시설\\프로젝트\\Project_201620897\\frontend\\src\\BoardMain.js":"6","F:\\2020 아주대\\3-2\\웹시설\\프로젝트\\Project_201620897\\frontend\\src\\Login.js":"7","F:\\2020 아주대\\3-2\\웹시설\\프로젝트\\Project_201620897\\frontend\\src\\BoardSearch.js":"8","F:\\2020 아주대\\3-2\\웹시설\\프로젝트\\Project_201620897\\frontend\\src\\Graph.js":"9","F:\\2020 아주대\\3-2\\웹시설\\프로젝트\\Project_201620897\\frontend\\src\\Graph2.js":"10"},{"size":390,"mtime":1607223358887,"results":"11","hashOfConfig":"12"},{"size":978,"mtime":1607649820027,"results":"13","hashOfConfig":"12"},{"size":2443,"mtime":1607593761918,"results":"14","hashOfConfig":"12"},{"size":4695,"mtime":1607597632245,"results":"15","hashOfConfig":"12"},{"size":16255,"mtime":1607622105961,"results":"16","hashOfConfig":"12"},{"size":11903,"mtime":1607532665270,"results":"17","hashOfConfig":"12"},{"size":7809,"mtime":1607850204684,"results":"18","hashOfConfig":"12"},{"size":10575,"mtime":1607617899367,"results":"19","hashOfConfig":"12"},{"size":1241,"mtime":1607971412763,"results":"20","hashOfConfig":"12"},{"size":1447,"mtime":1607620372403,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1axwgle",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"F:\\2020 아주대\\3-2\\웹시설\\프로젝트\\Project_201620897\\frontend\\src\\index.js",[],["47","48"],"F:\\2020 아주대\\3-2\\웹시설\\프로젝트\\Project_201620897\\frontend\\src\\Body.js",[],"F:\\2020 아주대\\3-2\\웹시설\\프로젝트\\Project_201620897\\frontend\\src\\Header.js",[],"F:\\2020 아주대\\3-2\\웹시설\\프로젝트\\Project_201620897\\frontend\\src\\BoardForm.js",["49","50"],"import React, { Component } from \"react\";\r\nimport {Button, Form, Navbar, Table} from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport $ from \"jquery\";\r\nimport {} from \"jquery.cookie\";\r\naxios.defaults.withCredentials = true;\r\n//다른 두개의 localhost를 동일 접근으로 허용\r\nconst headers = { withCredentials: true };\r\n\r\n\r\nclass BoardRow extends Component {\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>\r\n                    <NavLink\r\n                        to={{ pathname: \"/board/detail\", query: { _id: this.props._id } }}\r\n                    >\r\n                        {this.props.title}\r\n                    </NavLink>\r\n                </td>\r\n                <td>\r\n                    <NavLink\r\n                        to={{ pathname: \"/board/detail\", query: { _id: this.props._id } }}\r\n                    >\r\n                        {this.props.coName}\r\n                    </NavLink>\r\n                </td>\r\n                <td>\r\n                    <NavLink\r\n                        to={{ pathname: \"/board/detail\", query: { _id: this.props._id } }}\r\n                    >\r\n                        {this.props.createdAt.substring(0, 10)}\r\n                    </NavLink>\r\n                </td>\r\n\r\n                <td>\r\n                    <NavLink\r\n                        to={{ pathname: \"/board/detail\", query: { _id: this.props._id } }}\r\n                    >\r\n                        {this.props.writer}\r\n                    </NavLink>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nfunction findwriter(id,userlist){\r\n    for(let i=0;i<userlist.length;i++)\r\n        if(userlist[i]._id===id)\r\n            return userlist[i].name;\r\n}\r\n\r\nclass BoardForm extends Component {\r\n    state = {\r\n        boardList: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getBoardList();\r\n    }\r\n\r\n\r\n    getBoardList = () => {\r\n        const send_param = {\r\n            headers\r\n        };\r\n        axios\r\n            .post(\"http://localhost:8080/board/getBoardList\", send_param)\r\n            .then(returnData => {\r\n                let boardList;\r\n                console.log(returnData.data.list.length);\r\n                if (returnData.data.list.length > 0) {\r\n                    const boards = returnData.data.list;\r\n                    const tmp = returnData.data.user;\r\n                    boardList = boards.map(item => (\r\n                        <BoardRow\r\n                            key={Date.now() + Math.random() * 500}\r\n                            _id={item._id}\r\n                            createdAt={item.createdAt}\r\n                            title={item.title}\r\n                            writer = {findwriter(item.writer,tmp)}\r\n                            coName = {item.coName}\r\n                        />\r\n                    ));\r\n                    this.setState({\r\n                        boardList: boardList\r\n                    });\r\n                } else {\r\n                    boardList = (\r\n                        <tr>\r\n                            <td colSpan=\"4\">작성한 게시글이 존재하지 않습니다.</td>\r\n                        </tr>\r\n                    );\r\n                    this.setState({\r\n                        boardList: boardList\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const divStyle = {\r\n            margin: 50\r\n        };\r\n\r\n        const buttonStyle = {\r\n            margin: \"0px 5px 0px 10px\",\r\n            display: this.state.buttonDisplay\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <div style={divStyle}>\r\n                    <h2>게시판</h2>\r\n                    <Navbar className=\"justify-content-end\">\r\n                        <NavLink to=\"/boardWrite\">\r\n                            <Button style={buttonStyle} variant=\"primary\">\r\n                                글쓰기\r\n                            </Button>\r\n                        </NavLink>\r\n                    </Navbar>\r\n                    <Table striped bordered hover>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>글 제목</th>\r\n                            <th>기업 이름</th>\r\n                            <th>작성 날짜</th>\r\n                            <th>작성자</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>{this.state.boardList}</tbody>\r\n                    </Table>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BoardForm;\r\n","F:\\2020 아주대\\3-2\\웹시설\\프로젝트\\Project_201620897\\frontend\\src\\Write.js",[],"F:\\2020 아주대\\3-2\\웹시설\\프로젝트\\Project_201620897\\frontend\\src\\BoardMain.js",["51","52"],"import React, { Component } from \"react\";\r\nimport {Table, Button, Navbar} from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\nimport {} from \"jquery.cookie\";\r\nimport axios from \"axios\";\r\naxios.defaults.withCredentials = true;\r\nconst headers = { withCredentials: true };\r\n\r\nclass BoardDetail extends Component {\r\n    state = {\r\n        board: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.location.query !== undefined) {\r\n            this.getDetail();\r\n        } else {\r\n            window.location.href = \"/\";\r\n        }\r\n    }\r\n\r\n    deleteBoard = _id => {\r\n        const send_param = {\r\n            headers,\r\n            _id\r\n        };\r\n        if (window.confirm(\"정말 삭제하시겠습니까?\")) {\r\n            axios\r\n                .post(\"http://localhost:8080/board/delete\", send_param)\r\n                //정상 수행\r\n                .then(returnData => {\r\n                    alert(\"게시글이 삭제 되었습니다.\");\r\n                    window.location.href = \"/\";\r\n                })\r\n                //에러\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    alert(\"글 삭제 실패\");\r\n                });\r\n        }\r\n    };\r\n\r\n    getDetail = () => {\r\n        const send_param = {\r\n            headers,\r\n            _id: this.props.location.query._id\r\n        };\r\n        const marginBottom = {\r\n            marginBottom: 5\r\n        };\r\n        const buttonStyle = {\r\n            margin: \"0px 5px 0px 10px\",\r\n            display: this.state.buttonDisplay\r\n        };\r\n        axios\r\n            .post(\"http://localhost:8080/board/detail\", send_param)\r\n            //본인이 작성한 글 확인\r\n            .then(returnData => {\r\n                if (returnData.data.board[0]) {\r\n                    if(($.cookie(\"login_id\")===returnData.data.board[0].writer)){\r\n                    const board = (\r\n                        <div>\r\n                            <Table striped bordered hover>\r\n                                <thead>\r\n                                <tr>\r\n                                    <td colSpan=\"3\" style={{backgroundColor:\"antiquewhite\"}} align=\"center\">\r\n                                    제목\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan=\"3\">\r\n                                        {returnData.data.board[0].title}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan=\"3\" style={{backgroundColor:\"antiquewhite\"}} align=\"center\">\r\n                                    기업명\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan=\"3\">\r\n                                        {returnData.data.board[0].coName}\r\n                                    </td>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                <tr>\r\n                                    <th>직급 / 직책</th>\r\n                                    <th>업무</th>\r\n                                    <th>회사 크기</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>{returnData.data.board[0].mylevel}</td>\r\n                                    <td>{returnData.data.board[0].doWhat}</td>\r\n                                    <td>{returnData.data.board[0].colevel}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>복지 점수</th>\r\n                                    <th>문화 점수</th>\r\n                                    <th>공평 점수</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>{returnData.data.board[0].bpoint}</td>\r\n                                    <td>{returnData.data.board[0].mpoint}</td>\r\n                                    <td>{returnData.data.board[0].gpoint}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan=\"3\" style={{backgroundColor:\"antiquewhite\"}} align=\"center\">\r\n                                    내용\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan=\"3\"\r\n                                        dangerouslySetInnerHTML={{\r\n                                            __html: returnData.data.board[0].content\r\n                                        }}\r\n                                    />\r\n                                </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                            <div>\r\n                                <Navbar>\r\n                                    <Navbar.Toggle />\r\n                                    <Navbar.Collapse className=\"justify-content-end\">\r\n                                        <NavLink to={{\r\n                                            pathname: \"/boardWrite\",\r\n                                            query: {\r\n                                                title: returnData.data.board[0].title,\r\n                                                content: returnData.data.board[0].content,\r\n                                                _id: this.props.location.query._id,\r\n                                                coName : returnData.data.board[0].coName,\r\n                                                doWhat : returnData.data.board[0].doWhat,\r\n                                                mylevel : returnData.data.board[0].mylevel,\r\n                                                colevel : returnData.data.board[0].colevel,\r\n                                                bpoint : returnData.data.board[0].bpoint,\r\n                                                mpoint : returnData.data.board[0].mpoint,\r\n                                                gpoint : returnData.data.board[0].gpoint\r\n                                            }\r\n                                        }}\r\n                                        >\r\n                                            <Button style={buttonStyle} variant=\"primary\">\r\n                                                글 수정\r\n                                            </Button>\r\n                                        </NavLink>\r\n                                        <Button style={buttonStyle} onClick={this.deleteBoard.bind(\r\n                                            null,\r\n                                            this.props.location.query._id\r\n                                        )} variant=\"primary\">\r\n                                            글 삭제\r\n                                        </Button>\r\n                                    </Navbar.Collapse>\r\n                                </Navbar>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                    this.setState({\r\n                        board: board\r\n                    });\r\n                    } else{ //본인이 아닐때\r\n                        {\r\n                            const board = (\r\n                                <div>\r\n                                    <Table striped bordered hover>\r\n                                        <thead>\r\n                                        <tr>\r\n                                            <td colSpan=\"3\" style={{backgroundColor:\"antiquewhite\"}} align=\"center\">\r\n                                                제목\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td colSpan=\"3\">\r\n                                                {returnData.data.board[0].title}\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td colSpan=\"3\" style={{backgroundColor:\"antiquewhite\"}} align=\"center\">\r\n                                                기업명\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td colSpan=\"3\">\r\n                                                {returnData.data.board[0].coName}\r\n                                            </td>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        <tr>\r\n                                            <th>직급 / 직책</th>\r\n                                            <th>업무</th>\r\n                                            <th>회사 크기</th>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>{returnData.data.board[0].mylevel}</td>\r\n                                            <td>{returnData.data.board[0].doWhat}</td>\r\n                                            <td>{returnData.data.board[0].colevel}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>복지 점수</th>\r\n                                            <th>문화 점수</th>\r\n                                            <th>공평 점수</th>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>{returnData.data.board[0].bpoint}</td>\r\n                                            <td>{returnData.data.board[0].mpoint}</td>\r\n                                            <td>{returnData.data.board[0].gpoint}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td colSpan=\"3\" style={{backgroundColor:\"antiquewhite\"}} align=\"center\">\r\n                                                내용\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td colSpan=\"3\"\r\n                                                dangerouslySetInnerHTML={{\r\n                                                    __html: returnData.data.board[0].content\r\n                                                }}\r\n                                            />\r\n                                        </tr>\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </div>\r\n                            );\r\n                            this.setState({\r\n                                board: board\r\n                            });\r\n                        }\r\n                    }\r\n                } else {\r\n                    alert(\"글 상세 조회 실패\");\r\n                }\r\n            })\r\n            //에러\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    //onClick={this.getBoard.bind(null,this.props._id)}\r\n    render() {\r\n        const divStyle = {\r\n            margin: 50\r\n        };\r\n        return <div style={divStyle}>{this.state.board}</div>;\r\n    }\r\n}\r\n\r\nexport default BoardDetail;\r\n","F:\\2020 아주대\\3-2\\웹시설\\프로젝트\\Project_201620897\\frontend\\src\\Login.js",[],"F:\\2020 아주대\\3-2\\웹시설\\프로젝트\\Project_201620897\\frontend\\src\\BoardSearch.js",["53"],"import React, { Component } from \"react\";\r\nimport {Button, Form, Navbar, Table} from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {} from \"jquery.cookie\";\r\nimport HighCharts from './Graph'\r\nimport HighCharts2 from './Graph2'\r\naxios.defaults.withCredentials = true;\r\n//다른 두개의 localhost를 동일 접근으로 허용\r\nconst headers = { withCredentials: true };\r\n\r\nclass BoardRow extends React.Component {\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>\r\n                    <NavLink\r\n                        to={{ pathname: \"/board/detail\", query: { _id: this.props._id } }}\r\n                    >\r\n                        {this.props.title}\r\n                    </NavLink>\r\n                </td>\r\n                <td>\r\n                    <NavLink\r\n                        to={{ pathname: \"/board/detail\", query: { _id: this.props._id } }}\r\n                    >\r\n                        {this.props.coName}\r\n                    </NavLink>\r\n                </td>\r\n                <td>\r\n                    <NavLink\r\n                        to={{ pathname: \"/board/detail\", query: { _id: this.props._id } }}\r\n                    >\r\n                        {this.props.createdAt.substring(0, 10)}\r\n                    </NavLink>\r\n                </td>\r\n\r\n                <td>\r\n                    <NavLink\r\n                        to={{ pathname: \"/board/detail\", query: { _id: this.props._id } }}\r\n                    >\r\n                        {this.props.writer}\r\n                    </NavLink>\r\n                </td>\r\n\r\n                <td>\r\n                    <NavLink\r\n                        to={{ pathname: \"/board/detail\", query: { _id: this.props._id } }}\r\n                    >\r\n                        {this.props.mylevel}\r\n                    </NavLink>\r\n                </td>\r\n\r\n                <td>\r\n                    <NavLink\r\n                        to={{ pathname: \"/board/detail\", query: { _id: this.props._id } }}\r\n                    >\r\n                        {this.props.doWhat}\r\n                    </NavLink>\r\n                </td>\r\n\r\n                <td>\r\n                    <NavLink\r\n                        to={{ pathname: \"/board/detail\", query: { _id: this.props._id } }}\r\n                    >\r\n                        {this.props.bpoint}\r\n                    </NavLink>\r\n                </td>\r\n                <td>\r\n                    <NavLink\r\n                        to={{ pathname: \"/board/detail\", query: { _id: this.props._id } }}\r\n                    >\r\n                        {this.props.mpoint}\r\n                    </NavLink>\r\n                </td>\r\n                <td>\r\n                    <NavLink\r\n                        to={{ pathname: \"/board/detail\", query: { _id: this.props._id } }}\r\n                    >\r\n                        {this.props.gpoint}\r\n                    </NavLink>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nfunction findwriter(id,userlist){\r\n    for(let i=0;i<userlist.length;i++)\r\n        if(userlist[i]._id===id)\r\n            return userlist[i].name;\r\n}\r\n\r\nclass BoardForm extends Component {\r\n    state = {\r\n        boardList: [],\r\n        mylevelList: [],\r\n        mylevelcnt: [],\r\n        doWhatList: [],\r\n        doWhatcnt: [],\r\n        bpointsum:0,\r\n        mpointsum:0,\r\n        gpointsum:0,\r\n        pointList: [\"복지 점수\", \"문화 점수\", \"공평 점수\"],\r\n        valList: [],\r\n        cnt:0\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.searchBoardList();\r\n    }\r\n\r\n\r\n    searchBoardList = () => {\r\n        const searchval = this.searchval.value;\r\n        const send_param = {\r\n            headers,\r\n            searchval\r\n        };\r\n        axios\r\n            .post(\"http://localhost:8080/board/searchBoardList\", send_param)\r\n            .then(returnData => {\r\n                let boardList;\r\n                let mylevelList=[];\r\n                let mylevelcnt=[];\r\n                let doWhatList=[];\r\n                let doWhatcnt=[];\r\n                let bpointsum=0;\r\n                let mpointsum=0;\r\n                let gpointsum=0;\r\n                let valList=[];\r\n                let cnt=0;\r\n                if (returnData.data.list.length > 0) {\r\n                    const boards = returnData.data.list;\r\n                    let newboards = boards.slice();\r\n                    const tmp = returnData.data.user;\r\n                    boardList = boards.map(item => (\r\n                        <BoardRow\r\n                            key={Date.now() + Math.random() * 500}\r\n                            _id={item._id}\r\n                            createdAt={item.createdAt}\r\n                            title={item.title}\r\n                            writer = {findwriter(item.writer,tmp)}\r\n                            coName = {item.coName}\r\n                            mylevel = {item.mylevel}\r\n                            doWhat = {item.doWhat}\r\n                            bpoint = {item.bpoint}\r\n                            mpoint = {item.mpoint}\r\n                            gpoint = {item.gpoint}\r\n                        />\r\n                    ));\r\n                    //통계\r\n                    //returnData.data.board[0].writer\r\n                    for (let i=0;i<newboards.length;i++)\r\n                    {\r\n                        mylevelList.push(newboards[i].mylevel);\r\n                        doWhatList.push(newboards[i].doWhat);\r\n                    }\r\n                    let tmpList = [...mylevelList];\r\n                    mylevelList = [...new Set(tmpList)];\r\n                    for(let i=0;i<mylevelList.length;i++)\r\n                    {\r\n                        mylevelcnt.push(tmpList.filter(x=>x===mylevelList[i]).length);\r\n                    }\r\n                    tmpList = [...doWhatList];\r\n                    doWhatList = [...new Set(tmpList)];\r\n                    for(let i=0;i<doWhatList.length;i++)\r\n                    {\r\n                        doWhatcnt.push(tmpList.filter(x=>x===doWhatList[i]).length);\r\n                    }\r\n                    for(let i=0;i<newboards.length;i++)\r\n                    {\r\n                        bpointsum += newboards[i].bpoint;\r\n                        mpointsum += newboards[i].mpoint;\r\n                        gpointsum += newboards[i].gpoint;\r\n                    }\r\n                    bpointsum /= newboards.length;\r\n                    mpointsum /= newboards.length;\r\n                    gpointsum /= newboards.length;\r\n                    cnt = newboards.length;\r\n                    valList.push(bpointsum);\r\n                    valList.push(mpointsum);\r\n                    valList.push(gpointsum);\r\n\r\n                    this.setState({\r\n                        boardList: boardList,\r\n                        mylevelList: mylevelList,\r\n                        mylevelcnt: mylevelcnt,\r\n                        doWhatList: doWhatList,\r\n                        doWhatcnt: doWhatcnt,\r\n                        bpointsum: bpointsum,\r\n                        mpointsum: mpointsum,\r\n                        gpointsum: gpointsum,\r\n                        valList: valList,\r\n                        cnt:cnt\r\n                    });\r\n                } else {\r\n                    boardList = (\r\n                        <tr>\r\n                            <td colSpan=\"9\">작성한 게시글이 존재하지 않습니다.</td>\r\n                        </tr>\r\n                    );\r\n                    this.setState({\r\n                        boardList: boardList\r\n                    });\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const divStyle = {\r\n            margin: 50\r\n        };\r\n\r\n        const buttonStyle = {\r\n            margin: \"0px 5px 0px 10px\",\r\n            display: this.state.buttonDisplay\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <div style={divStyle}>\r\n                    <Form>\r\n                            <h2>기업 통계 검색</h2>\r\n                            <Form.Group controlId=\"findForm\">\r\n                                <Form.Control\r\n                                    placeholder=\"기업 입력\"\r\n                                    ref={ref=>(this.searchval=ref)}\r\n                                />\r\n                            </Form.Group>\r\n                            <Button style={buttonStyle} onClick={this.searchBoardList} style={{float:'right'}}>\r\n                                검색\r\n                            </Button>\r\n                    </Form>\r\n                    <br/>\r\n                    <br/>\r\n                    <hr/>\r\n                    <h5>{this.state.cnt}개의 검색 결과!</h5>\r\n                    <Table striped bordered hover>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>글 제목</th>\r\n                            <th>기업 이름</th>\r\n                            <th>작성 날짜</th>\r\n                            <th>작성자</th>\r\n                            <th>직급 / 직책</th>\r\n                            <th>업무</th>\r\n                            <th>복지 점수</th>\r\n                            <th>문화 점수</th>\r\n                            <th>공평 점수</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>{this.state.boardList}</tbody>\r\n                    </Table>\r\n                    <Navbar className=\"justify-content-end\">\r\n                        <NavLink to=\"/boardWrite\">\r\n                            <Button style={buttonStyle} variant=\"primary\">\r\n                                글쓰기\r\n                            </Button>\r\n                        </NavLink>\r\n                    </Navbar>\r\n                    <hr/>\r\n                    <HighCharts\r\n                        data={this.state.valList}\r\n                        idx={this.state.pointList}\r\n                    />\r\n                    <HighCharts2\r\n                        idx = {this.state.mylevelList}\r\n                        data = {this.state.mylevelcnt}\r\n                        title = \"직책 분포\"\r\n                    />\r\n                    <HighCharts2\r\n                        idx = {this.state.doWhatList}\r\n                        data = {this.state.doWhatcnt}\r\n                        title = \"업무 분포\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BoardForm;\r\n","F:\\2020 아주대\\3-2\\웹시설\\프로젝트\\Project_201620897\\frontend\\src\\Graph.js",[],"F:\\2020 아주대\\3-2\\웹시설\\프로젝트\\Project_201620897\\frontend\\src\\Graph2.js",[],["54","55"],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":2,"column":17,"nodeType":"62","messageId":"63","endLine":2,"endColumn":21},{"ruleId":"60","severity":1,"message":"64","line":5,"column":8,"nodeType":"62","messageId":"63","endLine":5,"endColumn":9},{"ruleId":"60","severity":1,"message":"65","line":49,"column":15,"nodeType":"62","messageId":"63","endLine":49,"endColumn":27},{"ruleId":"66","severity":1,"message":"67","line":161,"column":25,"nodeType":"68","messageId":"69","endLine":227,"endColumn":26},{"ruleId":"70","severity":1,"message":"71","line":235,"column":88,"nodeType":"72","endLine":235,"endColumn":111},{"ruleId":"56","replacedBy":"73"},{"ruleId":"58","replacedBy":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'$' is defined but never used.","'marginBottom' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["75"],["76"],"no-global-assign","no-unsafe-negation"]